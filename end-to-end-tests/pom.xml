<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.orfjackal.retrolambda</groupId>
        <artifactId>parent</artifactId>
        <version>1.5.1-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>end-to-end-tests</artifactId>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <!-- We must use an older version of the library,  so that we can run our tests on Java 5 -->
            <version>11.0.2</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>android-tests-helper</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.android.gms</groupId>
            <artifactId>play-services</artifactId>
            <version>${android.play-services.version}</version>
            <type>aar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.android.gms</groupId>
            <artifactId>play-services</artifactId>
            <version>${android.play-services.version}</version>
            <type>jar</type>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.android</groupId>
            <artifactId>platform</artifactId>
            <version>${android.platform.version}</version>
            <scope>system</scope>
            <systemPath>${env.ANDROID_HOME}/platforms/android-${android.platform.version}/android.jar</systemPath>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>android</id>
            <url>file://${env.ANDROID_HOME}/extras/android/m2repository</url>
        </repository>
        <repository>
            <id>android-google</id>
            <url>file://${env.ANDROID_HOME}/extras/google/m2repository</url>
        </repository>
    </repositories>

    <build>
        <plugins>

            <!-- Don't deploy the tests to Maven Central -->

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Run tests using Java 7 (but compile with Java 8) -->

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Process our byte codes to make them run on Java 7 -->

            <plugin>
                <groupId>net.orfjackal.retrolambda</groupId>
                <artifactId>retrolambda-maven-plugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process-main</goal>
                            <goal>process-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <target>${testBytecodeTarget}</target>
                </configuration>
            </plugin>

            <!-- Extract jar-in-jar dependencies for our tests from the Android SDK -->
            <!--
                        <plugin>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>unpack-android-aar</id>
                                    <phase>generate-sources</phase>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <configuration>
                                        <includeTypes>aar</includeTypes>
                                        <outputDirectory>${project.build.directory}/android</outputDirectory>
                                        <stripVersion>true</stripVersion>
                                        &lt;!&ndash;
                                                                    <artifactItems>
                                                                        <artifactItem>
                                                                            <groupId>com.google.android.gms</groupId>
                                                                            <artifactId>play-services</artifactId>
                                                                            <version>5.0.77</version>
                                                                            <type>aar</type>
                                                                            <outputDirectory>${project.build.directory}/android</outputDirectory>
                                                                            <destFileName>play-services.zip</destFileName>
                                                                        </artifactItem>
                                                                    </artifactItems>
                                        &ndash;&gt;
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>unpack-android-aar</id>
                                    <phase>generate-sources</phase>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <configuration>
                                        <tasks>
                                            <unzip src="${project.build.directory}/android/play-services.aar"
                                                   dest="${project.build.directory}/android/play-services/"/>
                                        </tasks>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>-->

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>eclipse</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <compilerId>eclipse</compilerId>
                            <!-- TODO: check compatibility with the Eclipse JDT compiler (update release scripts) -->
                            <!-- FIXME: we are unable to tell the Eclipse compiler to use Java 1.8
                                It just fails with the warning
                                "Unknown version '1.8', no version setting will be given to the compiler."
                                because the plugin is only aware of Java 7 and below.
                                Also we failed at giving custom compiler arguments, after which we
                                might have been able to make it use a newer Eclipse compiler) -->
                            <!--
                            <compilerArguments>
                                <org.eclipse.jdt.core.compiler.source>1.5</org.eclipse.jdt.core.compiler.source>
                                <org.eclipse.jdt.core.compiler.codegen.targetPlatform>1.5</org.eclipse.jdt.core.compiler.codegen.targetPlatform>
                            </compilerArguments>
                            -->
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.plexus</groupId>
                                <artifactId>plexus-compiler-eclipse</artifactId>
                                <version>2.3</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
